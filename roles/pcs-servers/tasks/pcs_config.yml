---
- name: Configuring cluster (step 1)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs host auth pcs-01.{{ domain }} pcs-02.{{ domain }} pcs-03.{{ domain }} -u hacluster -p {{ pcs_password }}"
  #no_log: true

- name: Check for replay (/opt/pcs_config_done exists)
  ansible.builtin.stat:
    path: /opt/pcs_config_done
  register: pcs_config_done

- name: Configuring cluster (step 2)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs cluster setup {{ cluster_name }} pcs-01.{{ domain }} pcs-02.{{ domain }} pcs-03.{{ domain }}"
  when:
    - pcs_config_done.stat.exists != True

# touch /opt/pcs_config_done
- name: Set replay protection (/opt/pcs_config_done)
  ansible.builtin.file:
    path: /opt/pcs_config_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - pcs_config_done.stat.exists != True

- name: Configuring cluster (step 3)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs cluster enable --all"
    - "pcs cluster start --all"

# https://www.golinuxcloud.com/setup-high-availability-cluster-centos-8/

# pcs property set stonith-enabled=false
- name: pcs property set stonith-enabled=false
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs property set stonith-enabled=false"

# pcs property set no-quorum-policy=freeze
- name: pcs property set no-quorum-policy=freeze
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs property set no-quorum-policy=freeze"

## pcs resource create dlm systemd:dlm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#- name: pcs resource create dlm systemd:dlm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#  ansible.builtin.command: "{{ item }}"
#  with_items:
#    - "pcs resource create dlm systemd:dlm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true"

## pcs resource create clvmd ocf:heartbeat:clvm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#- name: pcs resource create clvmd ocf:heartbeat:clvm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#  ansible.builtin.command: "{{ item }}"
#  with_items:
#    - "pcs resource create clvmd ocf:heartbeat:clvm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true"

## pcs constraint order start dlm-clone then clvmd-clone
#- name: pcs constraint order start dlm-clone then clvmd-clone
#  ansible.builtin.command: "{{ item }}"
#  with_items:
#    - "pcs constraint order start dlm-clone then clvmd-clone"





# echo 'system_id_source = "uname"' >> /etc/lvm/lvm.conf # each node

# dracut -f # each node

# systemctl reboot # each node

# mkdir /mnt/lvm_cluster_file0
# mkdir /mnt/lvm_cluster_block0


- name: Include lvm2
  include_tasks: lvm2.yml
  when: "ansible_hostname in 'pcs-01'"

- name: Include gfs2
  include_tasks: gfs2.yml
  when: "ansible_hostname in 'pcs-01'"

# pcs resource create clusterfs Filesystem device="/dev/cluster_vg/cluster_lv" directory="/mnt/gfs2" fstype="gfs2" "options=noatime" op monitor interval=10s on-fail=ignore clone interleave=true

# pcs constraint order start clvmd-clone then clusterfs-clone

# pcs constraint colocation add clusterfs-clone with clvmd-clone






# pcs resource create my-vg ocf:heartbeat:LVM-activate vgname=cluster_vg activation_mode=exclusive vg_access_mode=system_id --group HA-LVM

# [root@centos8-1 ~]# pcs resource create my-fs ocf:heartbeat:Filesystem device=/dev/cluster_vg/cluster_lv directory=/mnt/lvm_cluster fstype=gfs2 --group HA-LVM