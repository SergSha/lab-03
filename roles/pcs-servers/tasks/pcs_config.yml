---
- name: Configuring cluster (step 1)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs host auth pcs-01.{{ domain }} pcs-02.{{ domain }} pcs-03.{{ domain }} -u hacluster -p {{ pcs_password }}"
  #no_log: true

- name: Check for replay (/opt/pcs_config_done exists)
  ansible.builtin.stat:
    path: /opt/pcs_config_done
  register: pcs_config_done

- name: Configuring cluster (step 2)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs cluster setup {{ cluster_name }} pcs-01.{{ domain }} pcs-02.{{ domain }} pcs-03.{{ domain }}"
  when:
    - pcs_config_done.stat.exists != True

# touch /opt/pcs_config_done
- name: Set replay protection (/opt/pcs_config_done)
  ansible.builtin.file:
    path: /opt/pcs_config_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - pcs_config_done.stat.exists != True

- name: Configuring cluster (step 3)
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "pcs cluster enable --all"
    - "pcs cluster start --all"

- name: Wait a little
  pause:
    seconds: 10

# https://www.golinuxcloud.com/setup-high-availability-cluster-centos-8/

# pcs property set stonith-enabled=false
- name: pcs property set stonith-enabled=false
  ansible.builtin.command: pcs property set stonith-enabled=false

# pcs property set no-quorum-policy=freeze
- name: Set [no-quorum-policy=freeze] on GFS2
  ansible.builtin.command: pcs property set no-quorum-policy=freeze

#### Вместо lvmlockd заменить LVMLOCKD ####

# pcs resource create dlm systemd:dlm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
- name: pcs resource create dlm systemd:dlm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
  ansible.builtin.command: pcs resource create dlm ocf:pacemaker:controld op monitor interval=30s on-fail=fence --group locking

# pcs resource clone locking interleave=true
- name: create clone of [locking] to activate it on all nodes in cluster
  ansible.builtin.command: pcs resource clone locking interleave=true

# pcs resource create lvmlockdd ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=fence --group locking
- name: create lvmlockd resource
  ansible.builtin.command: pcs resource create lvmlockdd ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=fence --group locking


## pcs resource create lvmlockd ocf:heartbeat:clvm op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#- name: pcs resource create lvmlockd ocf:heartbeat:lvmlock op monitor interval=30s on-fail=ignore clone interleave=true ordered=true
#  ansible.builtin.command: pcs resource create lvmlockd ocf:heartbeat:lvmlockd op monitor interval=30s on-fail=ignore clone interleave=true ordered=true

## pcs constraint order start dlm-clone then lvmlockd-clone
#- name: pcs constraint order start dlm-clone then lvmlockd-clone
#  ansible.builtin.command: pcs constraint order start dlm-clone then lvmlockd-clone

- name: Wait a little
  pause:
    seconds: 10

- name: Include lvm2
  include_tasks: lvm2.yml
  when: "ansible_hostname in 'pcs-01'"

- name: Include gfs2
  include_tasks: gfs2.yml
  when: "ansible_hostname in 'pcs-01'"

## pcs resource create clusterfs Filesystem device="/dev/cluster_vg/cluster_lv" directory="/mnt/gfs2" fstype="gfs2" "options=noatime" op monitor interval=10s on-fail=ignore clone interleave=true
#- name: pcs resource create clusterfs Filesystem device="/dev/cluster_vg/cluster_lv" directory="/mnt/gfs2" fstype="gfs2" "options=noatime" op monitor interval=10s on-fail=ignore clone interleave=true
#  ansible.builtin.command: pcs resource create clusterfs Filesystem device="/dev/cluster_vg/cluster_lv" directory="/mnt/gfs2" fstype="gfs2" "options=noatime" op monitor interval=10s on-fail=ignore clone interleave=true

## pcs constraint order start lvmlockd-clone then clusterfs-clone
#- name: pcs constraint order start lvmlockd-clone then clusterfs-clone
#  ansible.builtin.command: pcs constraint order start lvmlockd-clone then clusterfs-clone

## pcs constraint colocation add clusterfs-clone with lvmlockd-clone
#- name: pcs constraint colocation add clusterfs-clone with lvmlockd-clone
#  ansible.builtin.command: pcs constraint colocation add clusterfs-clone with lvmlockd-clone



# pcs resource create name_cluster ocf:heartbeat:LVM-activate vgname=cluster_vg activation_mode=exclusive vg_access_mode=system_id --group HA-LVM
- name: create LVM-activate resource
# ansible.builtin.command: "pcs resource create {{ item.name }} ocf:heartbeat:LVM-activate vgname={{ item.vg }} activation_mode=exclusive vg_access_mode=system_id --group {{ item.group }}"
  ansible.builtin.command: "pcs resource create {{ item.name }} ocf:heartbeat:LVM-activate lvname={{ item.lv }} vgname={{ item.vg }} activation_mode=shared vg_access_mode=lvmlockd --group {{ item.group }}"
  with_items: 
    - { name: 'fileio_cluster_vg', lv: 'file0_cluster_lv', vg: 'fileio_cluster_vg', group: 'shared_vg_file0' }
    - { name: 'block_cluster_vg', lv: 'block0_cluster_lv', vg: 'block_cluster_vg', group: 'shared_vg_block0' }

# pcs resource clone shared_vg interleave=true
- name: create clone of [LVM-activate]
  ansible.builtin.command: "pcs resource clone {{ item.group }} interleave=true"
  with_items: 
    - { group: 'shared_vg_file0' }
    - { group: 'shared_vg_block0' }

# pcs constraint order start locking-clone then shared_vg-clone
- name: set start order as [locking] → [shared_vg]
  ansible.builtin.command: "pcs constraint order start locking-clone then {{ item.group }}-clone"
  with_items: 
    - { group: 'shared_vg_file0' }
    - { group: 'shared_vg_block0' }

# pcs constraint colocation add shared_vg-clone with locking-clone
- name: set that [shared_vg] and [locking] start on a same node
  ansible.builtin.command: "pcs constraint colocation add {{ item.group }}-clone with locking-clone"
  with_items: 
    - { group: 'shared_vg_file0' }
    - { group: 'shared_vg_block0' }

- name: Wait a little
  pause:
    seconds: 10

# pcs resource create shared_fs ocf:heartbeat:Filesystem device='/dev/vg_gfs2/lv_gfs2' directory='/home/gfs2-share' fstype='gfs2' options=noatime op monitor interval=10s on-fail=fence --group shared_vg
- name: create Filesystem resource
# ansible.builtin.command: "pcs resource create {{ item.name }} ocf:heartbeat:Filesystem device={{ item.device }} directory={{ item.mnt }} fstype=gfs2 'options=noatime' op monitor interval=10s on-fail=ignore clone interleave=true"
  ansible.builtin.command: "pcs resource create {{ item.name }} ocf:heartbeat:Filesystem device='{{ item.device }}' directory='{{ item.mnt }}' fstype='gfs2' options=noatime op monitor interval=10s on-fail=ignore --group {{ item.group }}"
  with_items: 
    - { name: 'fileio_cluster_fs', device: '/dev/fileio_cluster_vg/file0_cluster_lv', mnt: '/mnt/lvm_cluster_file0', group: 'shared_vg_file0' }
    - { name: 'block_cluster_fs', device: '/dev/block_cluster_vg/block0_cluster_lv', mnt: '/mnt/lvm_cluster_block0', group: 'shared_vg_block0' }
